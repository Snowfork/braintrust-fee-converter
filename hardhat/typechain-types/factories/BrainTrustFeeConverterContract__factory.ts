/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BrainTrustFeeConverterContract,
  BrainTrustFeeConverterContractInterface,
} from "../BrainTrustFeeConverterContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ISwapRouter",
        name: "_swapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BTRST",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "TreasuryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolFee",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "swapExactInputSingle",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapRouter",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161066c38038061066c83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c6105ce61009e6000396000818161011801528181610176015261027a01526105ce6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063089fe6aa146100675780635b5c251f1461008957806373bd43ad146100bc57806386ed23e2146100dd57806389a30271146100f8578063c31c9c0714610113575b600080fd5b610070610bb881565b60405162ffffff90911681526020015b60405180910390f35b6100a473faa23a05e630a8e3e5b48e5579ef690e3961f49e81565b6040516001600160a01b039091168152602001610080565b6100cf6100ca36600461052f565b61013a565b604051908152602001610080565b6100a473c24d9a9cb8be9e7ab8ab6b8231a3e924acab07af81565b6100a4734dbcdf9b62e891a7cec5a2568c3f4faf9e8abe2b81565b6100a47f000000000000000000000000000000000000000000000000000000000000000081565b600061015c734dbcdf9b62e891a7cec5a2568c3f4faf9e8abe2b333085610300565b61019b734dbcdf9b62e891a7cec5a2568c3f4faf9e8abe2b7f00000000000000000000000000000000000000000000000000000000000000008461040f565b6040805161010081018252734dbcdf9b62e891a7cec5a2568c3f4faf9e8abe2b815273c24d9a9cb8be9e7ab8ab6b8231a3e924acab07af60208201908152610bb882840190815273faa23a05e630a8e3e5b48e5579ef690e3961f49e60608401908152426080850190815260a08501888152600060c0870181815260e08801918252975163414bf38960e01b815287516001600160a01b039081166004830152965187166024820152945162ffffff166044860152925185166064850152905160848401525160a4830152935160c48201529251811660e484015290917f00000000000000000000000000000000000000000000000000000000000000009091169063414bf3899061010401602060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f99190610547565b9392505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b1790529151600092839290881691610364919061055f565b6000604051808303816000865af19150503d80600081146103a1576040519150601f19603f3d011682016040523d82523d6000602084013e6103a6565b606091505b50915091508180156103d05750805115806103d05750808060200190518101906103d0919061050f565b6104075760405162461bcd60e51b815260206004820152600360248201526229aa2360e91b60448201526064015b60405180910390fd5b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663095ea7b360e01b179052915160009283929087169161046b919061055f565b6000604051808303816000865af19150503d80600081146104a8576040519150601f19603f3d011682016040523d82523d6000602084013e6104ad565b606091505b50915091508180156104d75750805115806104d75750808060200190518101906104d7919061050f565b6105085760405162461bcd60e51b8152602060048201526002602482015261534160f01b60448201526064016103fe565b5050505050565b600060208284031215610520578081fd5b815180151581146102f9578182fd5b600060208284031215610540578081fd5b5035919050565b600060208284031215610558578081fd5b5051919050565b60008251815b8181101561057f5760208186018101518583015201610565565b8181111561058d5782828501525b50919091019291505056fea26469706673582212202984626d90697cc9ad6c0950b10767240677ac7318b5d1f6032270fd4480b07364736f6c63430008040033";

type BrainTrustFeeConverterContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BrainTrustFeeConverterContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BrainTrustFeeConverterContract__factory extends ContractFactory {
  constructor(...args: BrainTrustFeeConverterContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _swapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BrainTrustFeeConverterContract> {
    return super.deploy(
      _swapRouter,
      overrides || {}
    ) as Promise<BrainTrustFeeConverterContract>;
  }
  getDeployTransaction(
    _swapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_swapRouter, overrides || {});
  }
  attach(address: string): BrainTrustFeeConverterContract {
    return super.attach(address) as BrainTrustFeeConverterContract;
  }
  connect(signer: Signer): BrainTrustFeeConverterContract__factory {
    return super.connect(signer) as BrainTrustFeeConverterContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BrainTrustFeeConverterContractInterface {
    return new utils.Interface(_abi) as BrainTrustFeeConverterContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BrainTrustFeeConverterContract {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BrainTrustFeeConverterContract;
  }
}
