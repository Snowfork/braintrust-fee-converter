/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { BTRST, BTRSTInterface } from "../BTRST";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DELEGATION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "fromBlock",
        type: "uint32",
      },
      {
        internalType: "uint96",
        name: "votes",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCurrentVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPriorVotes",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rawAmount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516118f43803806118f483398101604081905261002f916100a5565b6001600160a01b03811660008181526001602052604080822080546001600160601b0319166acecb8f27f4200f3a00000090811790915590517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef916100979190815260200190565b60405180910390a3506100d3565b6000602082840312156100b6578081fd5b81516001600160a01b03811681146100cc578182fd5b9392505050565b611812806100e26000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b4b5ea5711610071578063b4b5ea5714610318578063c3cda5201461032b578063dd62ed3e1461033e578063e7a324dc1461037e578063f1127ed8146103a557600080fd5b806370a0823114610288578063782d6fe1146102ba5780637ecebe00146102e557806395d89b4114610126578063a9059cbb1461030557600080fd5b806323b872dd116100f457806323b872dd146101ca578063313ce567146101dd578063587cde1e146101f75780635c19a95c146102385780636fcfff451461024d57600080fd5b806306fdde0314610126578063095ea7b31461016057806318160ddd1461018357806320606b70146101a3575b600080fd5b61014a6040518060400160405280600581526020016410951494d560da1b81525081565b6040516101579190611521565b60405180910390f35b61017361016e36600461145c565b61040c565b6040519015158152602001610157565b6101956acecb8f27f4200f3a00000081565b604051908152602001610157565b6101957f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6101736101d8366004611421565b6104d0565b6101e5601281565b60405160ff9091168152602001610157565b6102206102053660046113d5565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610157565b61024b6102463660046113d5565b610611565b005b61027361025b3660046113d5565b60046020526000908152604090205463ffffffff1681565b60405163ffffffff9091168152602001610157565b6101956102963660046113d5565b6001600160a01b03166000908152600160205260409020546001600160601b031690565b6102cd6102c836600461145c565b61061e565b6040516001600160601b039091168152602001610157565b6101956102f33660046113d5565b60056020526000908152604090205481565b61017361031336600461145c565b6108ab565b6102cd6103263660046113d5565b6108e7565b61024b610339366004611485565b610965565b61019561034c3660046113ef565b6001600160a01b039182166000908152602081815260408083209390941682529190915220546001600160601b031690565b6101957fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf81565b6103e86103b33660046114e3565b600360209081526000928352604080842090915290825290205463ffffffff811690600160201b90046001600160601b031682565b6040805163ffffffff90931683526001600160601b03909116602083015201610157565b6000806001600160601b0383141561042c57506001600160601b03610451565b61044e8360405180606001604052806026815260200161179060269139610c51565b90505b336000818152602081815260408083206001600160a01b0389168085529083529281902080546001600160601b0319166001600160601b03871690811790915590519081529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a360019150505b92915050565b6001600160a01b0383166000908152602081815260408083203380855290835281842054825160608101909352602680845291936001600160601b03909116928592610526928892919061179090830139610c51565b9050866001600160a01b0316836001600160a01b03161415801561055357506001600160601b0382811614155b156105f957600061057d83836040518060600160405280603e81526020016116d0603e9139610c80565b6001600160a01b03898116600081815260208181526040808320948a168084529482529182902080546001600160601b0319166001600160601b0387169081179091559151918252939450919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505b610604878783610cca565b5060019695505050505050565b61061b3382610f1b565b50565b60004382106106855760405162461bcd60e51b815260206004820152602860248201527f42545253543a3a6765745072696f72566f7465733a206e6f74207965742064656044820152671d195c9b5a5b995960c21b60648201526084015b60405180910390fd5b6001600160a01b03831660009081526004602052604090205463ffffffff16806106b35760009150506104ca565b6001600160a01b038416600090815260036020526040812084916106d86001856115ed565b63ffffffff9081168252602082019290925260400160002054161161074b576001600160a01b03841660009081526003602052604081209061071b6001846115ed565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b031691506104ca9050565b6001600160a01b038416600090815260036020908152604080832083805290915290205463ffffffff168310156107865760009150506104ca565b6000806107946001846115ed565b90505b8163ffffffff168163ffffffff16111561086657600060026107b984846115ed565b6107c391906115be565b6107cd90836115ed565b6001600160a01b038816600090815260036020908152604080832063ffffffff858116855290835292819020815180830190925254928316808252600160201b9093046001600160601b03169181019190915291925087141561083a576020015194506104ca9350505050565b805163ffffffff168711156108515781935061085f565b61085c6001836115ed565b92505b5050610797565b506001600160a01b038516600090815260036020908152604080832063ffffffff909416835292905220546001600160601b03600160201b9091041691505092915050565b6000806108d0836040518060600160405280602781526020016117b660279139610c51565b90506108dd338583610cca565b5060019392505050565b6001600160a01b03811660009081526004602052604081205463ffffffff168061091257600061095e565b6001600160a01b0383166000908152600360205260408120906109366001846115ed565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b9392505050565b604080518082018252600581526410951494d560da1b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f298b399384dcd085d44ebe2fa959f6ccef809d510439311e02cccc4bc1ba9e2581840152466060820152306080808301919091528351808303909101815260a0820184528051908301207fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60c08301526001600160a01b038a1660e083015261010082018990526101208083018990528451808403909101815261014083019094528351939092019290922061190160f01b6101608401526101628301829052610182830181905290916000906101a20160408051601f198184030181528282528051602091820120600080855291840180845281905260ff8a169284019290925260608301889052608083018790529092509060019060a0016020604051602081039080840390855afa158015610ae5573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b585760405162461bcd60e51b815260206004820152602760248201527f42545253543a3a64656c656761746542795369673a20696e76616c6964207369604482015266676e617475726560c81b606482015260840161067c565b6001600160a01b0381166000908152600560205260408120805491610b7c83611632565b919050558914610bda5760405162461bcd60e51b815260206004820152602360248201527f42545253543a3a64656c656761746542795369673a20696e76616c6964206e6f6044820152626e636560e81b606482015260840161067c565b87421115610c3a5760405162461bcd60e51b815260206004820152602760248201527f42545253543a3a64656c656761746542795369673a207369676e617475726520604482015266195e1c1a5c995960ca1b606482015260840161067c565b610c44818b610f1b565b505050505b505050505050565b600081600160601b8410610c785760405162461bcd60e51b815260040161067c9190611521565b509192915050565b6000836001600160601b0316836001600160601b031611158290610cb75760405162461bcd60e51b815260040161067c9190611521565b50610cc28385611612565b949350505050565b6001600160a01b038316610d465760405162461bcd60e51b815260206004820152603d60248201527f42545253543a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207460448201527f72616e736665722066726f6d20746865207a65726f2061646472657373000000606482015260840161067c565b6001600160a01b038216610dc25760405162461bcd60e51b815260206004820152603b60248201527f42545253543a3a5f7472616e73666572546f6b656e733a2063616e6e6f74207460448201527f72616e7366657220746f20746865207a65726f20616464726573730000000000606482015260840161067c565b6001600160a01b038316600090815260016020908152604091829020548251606081019093526037808452610e0d936001600160601b03909216928592919061169990830139610c80565b6001600160a01b03848116600090815260016020908152604080832080546001600160601b0319166001600160601b03968716179055928616825290829020548251606081019093526031808452610e75949190911692859290919061173690830139610fa5565b6001600160a01b0383811660008181526001602090815260409182902080546001600160601b0319166001600160601b03968716179055905193851684529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36001600160a01b03808416600090815260026020526040808220548584168352912054610f1692918216911683610ff2565b505050565b6001600160a01b03808316600081815260026020818152604080842080546001845282862054949093528787166001600160a01b031984168117909155905191909516946001600160601b039092169391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610f9f828483610ff2565b50505050565b600080610fb2848661159c565b9050846001600160601b0316816001600160601b031610158390610fe95760405162461bcd60e51b815260040161067c9190611521565b50949350505050565b816001600160a01b0316836001600160a01b03161415801561101d57506000816001600160601b0316115b15610f16576001600160a01b038316156110e2576001600160a01b03831660009081526004602052604081205463ffffffff16908161105d5760006110a9565b6001600160a01b0385166000908152600360205260408120906110816001856115ed565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b905060006110d0828560405180606001604052806029815260200161176760299139610c80565b90506110de8684848461119a565b5050505b6001600160a01b03821615610f16576001600160a01b03821660009081526004602052604081205463ffffffff16908161111d576000611169565b6001600160a01b0384166000908152600360205260408120906111416001856115ed565b63ffffffff168152602081019190915260400160002054600160201b90046001600160601b03165b90506000611190828560405180606001604052806028815260200161170e60289139610fa5565b9050610c49858484845b60006111be4360405180606001604052806035815260200161166460359139611392565b905060008463ffffffff1611801561121857506001600160a01b038516600090815260036020526040812063ffffffff8316916111fc6001886115ed565b63ffffffff908116825260208201929092526040016000205416145b1561128c576001600160a01b038516600090815260036020526040812083916112426001886115ed565b63ffffffff168152602081019190915260400160002080546001600160601b0392909216600160201b026fffffffffffffffffffffffff000000001990921691909117905561133d565b60408051808201825263ffffffff80841682526001600160601b0380861660208085019182526001600160a01b038b166000908152600382528681208b8616825290915294909420925183549451909116600160201b026fffffffffffffffffffffffffffffffff1990941691161791909117905561130c846001611574565b6001600160a01b0386166000908152600460205260409020805463ffffffff191663ffffffff929092169190911790555b604080516001600160601b038086168252841660208201526001600160a01b038716917fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724910160405180910390a25050505050565b600081600160201b8410610c785760405162461bcd60e51b815260040161067c9190611521565b80356001600160a01b03811681146113d057600080fd5b919050565b6000602082840312156113e6578081fd5b61095e826113b9565b60008060408385031215611401578081fd5b61140a836113b9565b9150611418602084016113b9565b90509250929050565b600080600060608486031215611435578081fd5b61143e846113b9565b925061144c602085016113b9565b9150604084013590509250925092565b6000806040838503121561146e578182fd5b611477836113b9565b946020939093013593505050565b60008060008060008060c0878903121561149d578182fd5b6114a6876113b9565b95506020870135945060408701359350606087013560ff811681146114c9578283fd5b9598949750929560808101359460a0909101359350915050565b600080604083850312156114f5578182fd5b6114fe836113b9565b9150602083013563ffffffff81168114611516578182fd5b809150509250929050565b6000602080835283518082850152825b8181101561154d57858101830151858201604001528201611531565b8181111561155e5783604083870101525b50601f01601f1916929092016040019392505050565b600063ffffffff8083168185168083038211156115935761159361164d565b01949350505050565b60006001600160601b038083168185168083038211156115935761159361164d565b600063ffffffff808416806115e157634e487b7160e01b83526012600452602483fd5b92169190910492915050565b600063ffffffff8381169083168181101561160a5761160a61164d565b039392505050565b60006001600160601b038381169083168181101561160a5761160a61164d565b60006000198214156116465761164661164d565b5060010190565b634e487b7160e01b600052601160045260246000fdfe42545253543a3a5f7772697465436865636b706f696e743a20626c6f636b206e756d6265722065786365656473203332206269747342545253543a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e7420657863656564732062616c616e636542545253543a3a7472616e7366657246726f6d3a207472616e7366657220616d6f756e742065786365656473207370656e64657220616c6c6f77616e636542545253543a3a5f6d6f7665566f7465733a20766f746520616d6f756e74206f766572666c6f777342545253543a3a5f7472616e73666572546f6b656e733a207472616e7366657220616d6f756e74206f766572666c6f777342545253543a3a5f6d6f7665566f7465733a20766f746520616d6f756e7420756e646572666c6f777342545253543a3a617070726f76653a20616d6f756e742065786365656473203936206269747342545253543a3a7472616e736665723a20616d6f756e7420657863656564732039362062697473a26469706673582212206e21b3a04fa4379737d949400a263f960fca88caa5f685bd4b286d67978c5df564736f6c63430008040033";

type BTRSTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BTRSTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BTRST__factory extends ContractFactory {
  constructor(...args: BTRSTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BTRST> {
    return super.deploy(account, overrides || {}) as Promise<BTRST>;
  }
  getDeployTransaction(
    account: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(account, overrides || {});
  }
  attach(address: string): BTRST {
    return super.attach(address) as BTRST;
  }
  connect(signer: Signer): BTRST__factory {
    return super.connect(signer) as BTRST__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BTRSTInterface {
    return new utils.Interface(_abi) as BTRSTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): BTRST {
    return new Contract(address, _abi, signerOrProvider) as BTRST;
  }
}
